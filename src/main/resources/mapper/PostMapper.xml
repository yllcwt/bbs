<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bbs.mapper.PostMapper">
    <resultMap id="resultPosts" type="com.example.bbs.entity.Post">
        <id column="post_id" property="postId"/>
        <result column="user_id" property="userId"/>
        <result column="post_title" property="postTitle"/>
        <result column="post_content" property="postContent"/>
        <result column="post_like" property="postLike"/>
        <result column="post_view" property="postView"/>
        <result column="post_time" property="postTime"/>
        <result column="post_comment_count" property="postCommentCount"/>
        <result column="post_top" property="postTop"/>
    </resultMap>

    <resultMap id="resultPostDTO" type="com.example.bbs.dto.PostDTO">
        <id column="post_id" property="postId"/>
        <result column="user_id" property="userId"/>
        <result column="post_title" property="postTitle"/>
        <result column="post_content" property="postContent"/>
        <result column="post_like" property="postLike"/>
        <result column="post_view" property="postView"/>
        <result column="post_time" property="postTime"/>
        <result column="post_comment_count" property="postCommentCount"/>
        <result column="post_top" property="postTop"/>
        <association property="user" javaType="com.example.bbs.entity.User">
            <id column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
            <result column="user_image" property="userImage"/>
            <result column="user_display_name" property="userDisplayName"/>
        </association>
        <association property="category" javaType="com.example.bbs.entity.Category">
            <id column="id" property="id"/>
            <result column="category_name" property="categoryName"/>
            <result column="category_explanation" property="categoryExplanation"/>
        </association>
    </resultMap>

    <sql id="Base_Post_Info">
        post_id,user_id,post_title,post_content,post_like,post_view
        ,post_time,post_comment_count,post_top
    </sql>

<!--    <select id="addPost" resultMap="resultPosts" parameterType="com.example.bbs.entity.Post">-->
<!--        insert into post(user_id, post_title, post_content, post_like, post_view, post_time, post_comment_count)-->
<!--        values (#{post.userId}, #{post.postTitle}, #{post.postContent}, #{post.postLike}, #{post.postView}, #{post.postTime}, #{post.postCommentCount})-->
<!--    </select>-->
    <select id="selectPost" resultMap="resultPostDTO">
        SELECT  a.user_id,
                a.post_id,
                a.post_title,
                a.post_content,
                a.post_like,
                a.post_view,
                a.post_time,
                a.post_comment_count,
                a.post_top,
				d.id,
				c.user_name,
				c.user_image,
				c.user_display_name,
				d.category_name,
				d.category_explanation
        from post a
        LEFT JOIN category_post_ref b ON a.post_id = b.post_id
        LEFT JOIN user c ON a.user_id = c.user_id
        LEFT JOIN category d ON d.id = b.category_id
        <if test="postQueryCondition.tagId != null">
        LEFT JOIN tag_post_ref e ON a.post_id = e.post_id
        </if>
        <where>
            <if test="postQueryCondition.userId != null">
                a.user_id = #{postQueryCondition.userId}
            </if>
            <if test="postQueryCondition.categoryId != null">
                AND d.id = #{postQueryCondition.categoryId}
            </if>
            <if test="postQueryCondition.keywords != null and postQueryCondition.keywords != ''">
                AND a.post_title LIKE CONCAT('%', #{postQueryCondition.keywords} ,'%')
            </if>
            <if test="postQueryCondition.tagId != null">
                AND e.tag_id = #{postQueryCondition.tagId}
            </if>
        </where>
        order by post_top desc , post_time desc
        limit #{offset }, #{pageSize}
    </select>
    
    <select id="collectCount" resultType="Integer">
        select count(1) from post
    </select>
    
    <select id="calculateCount" resultType="java.lang.Integer">
        SELECT  count(*)
        from post a
        LEFT JOIN category_post_ref b ON a.post_id = b.post_id
        LEFT JOIN user c ON a.user_id = c.user_id
        LEFT JOIN category d ON d.id = b.category_id
        <if test="postQueryCondition.tagId != null">
            LEFT JOIN tag_post_ref e ON a.post_id = e.post_id
        </if>
        <where>
            <if test="postQueryCondition.userId != null">
                a.user_id = #{postQueryCondition.userId}
            </if>
            <if test="postQueryCondition.categoryId != null">
                AND d.id = #{postQueryCondition.categoryId}
            </if>
            <if test="postQueryCondition.keywords != null and postQueryCondition.keywords != ''">
                AND a.post_title LIKE CONCAT('%', #{postQueryCondition.keywords} ,'%')
            </if>
            <if test="postQueryCondition.tagId != null">
                AND e.tag_id = #{postQueryCondition.tagId}
            </if>
        </where> 
    </select>

    <select id="findPostByPostId" resultMap="resultPostDTO">
        SELECT  a.user_id,
                a.post_id,
                a.post_title,
                a.post_content,
                a.post_like,
                a.post_view,
                a.post_time,
                a.post_comment_count,
                a.post_top,
				d.id,
				c.user_name,
				c.user_image,
				d.category_name,
				d.category_explanation
		from post a
        LEFT JOIN category_post_ref b ON a.post_id = b.post_id
        LEFT JOIN user c ON a.user_id = c.user_id
        LEFT JOIN category d ON d.id = b.category_id
        where a.post_id = #{postId}
    </select>

    <select id="addPostView">
        UPDATE post set post_view = post_view + 1
        where post_id = #{postId}
    </select>

    <select id="addPostCommentCount" parameterType="java.lang.Integer">
        UPDATE post set post_comment_count = post_comment_count+1
        where post_id = #{postId}
    </select>

    <select id="calculateAmount" resultType="java.lang.Integer">
        select count(*) from post
    </select>

    <select id="listPostManage" resultMap="resultPosts">
        select <include refid="Base_Post_Info"></include> from post
        limit #{offset }, #{pageSize}
    </select>
</mapper>
